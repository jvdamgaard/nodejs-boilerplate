/*
 * Generate less file based on css object from sprite-generator
 */

// Import packages
var fsExt = require('./fs-ext'),
    _     = require('underscore'),
    im    = require('imagemagick'),
    cache = require('./cache');

// Make content for sprite mixin
var setSprite = function(cssObj, name, pseudo) {

  var width     = Math.round(cssObj.width/2),
      height    = Math.round(cssObj.height/2),
      xOffset   = Math.round(cssObj.xOffset/2);

      name      = '"' + name + '"';

  if (pseudo) {
    pseudo    = '"' + pseudo + '"';
    return '#sprite > .pseudo-class(' + [name, pseudo, width, height, xOffset].join(',') + ');\n';
  } else {
    return '#sprite > .css-class(' + [name, width, height, xOffset].join(',') + ');\n';
  }
};

// Generate and save less file with sprite imformations
module.exports.generate = function(data, lessFile, callback) {

  cache.add(data.image.retina, function(retinaUrl) {
    cache.add(data.image.nonRetina, function(nonRetinaUrl) {

      // Get dimensions of sprite image
      im.identify(data.image.nonRetina, function(err, features){
        if (err) return callback(err);

        var bgWidth      = features.width,
            bgHeight     = features.height;
            retinaUrl    = '"' + retinaUrl + '"';
            nonRetinaUrl = '"' + nonRetinaUrl + '"';

        var less = '// Autogenerated sprites\n\n';

        less += '#sprite > .init;\n';
        less += '#sprite > .set-background(' + nonRetinaUrl + ');\n';
        less += '#sprite > .set-retina-background(' + [retinaUrl, bgWidth, bgHeight].join(',') + ');\n';
        less += '\n';

        for (var cssClass in data.css) {
          less += setSprite(data.css[cssClass], cssClass);

          if (data.css[cssClass][':active']) {
            data.css[cssClass]['.active'] = data.css[cssClass][':active'];
          }

          for (var pseudoClass in data.css[cssClass]) {
            if (_.indexOf(pseudoClass, ':') === 0 || _.indexOf(pseudoClass, '.') === 0) {
              less += setSprite(data.css[cssClass][pseudoClass], cssClass, pseudoClass);
            }
          }
          less += '\n';
        }

        // Write less content to file
        fsExt.writeFile(lessFile, less, function(err) {
          callback(err);
        });
      });
    });
  });
};